{"version":3,"sources":["redux/constant.js","containers/Header/index.jsx","redux/actions/header.js","containers/Todo/index.jsx","redux/actions/todo.js","containers/List/index.jsx","redux/actions/list.js","App.jsx","redux/reducers/todo.js","redux/store.js","redux/reducers/list.js","index.js"],"names":["ADD_TODO","DEL_TODO","UPDATE_TODO","UPDATE_DISPLAY","UPDATE_TAB","CLEAR_FINISHED","Header","submitTodo","e","preventDefault","txtNode","value","trim","todoObj","id","nanoid","content","finished","display","setDisplay","props","addTodo","alert","tabState","className","ref","c","type","name","placeholder","onClick","this","Component","connect","state","tabFlag","data","Todo","delHandler","window","confirm","delTodo","checkHandler","target","matches","updateTodo","defaultChecked","src","alt","yiduitodo","todos","List","clickTabHandler","parentNode","childNodes","forEach","child","classList","remove","add","newTab","dataset","tab","newTodos","todo","updateDisplay","updateTab","items","children","footer","lastChild","i","length","contains","style","setProperty","count","reduce","total","clickClearHandler","altKey","delFinished","localStorage","clear","filter","map","class","flag","App","initState","JSON","parse","getItem","allReducer","combineReducers","preState","action","setItem","stringify","newTodos_D","newTodos_U","createStore","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.d1403d82.chunk.js","sourcesContent":["/* \r\n\t此模塊是用於定義action對象中type類型的常量值\r\n\t其目的只有一個：便於管理的同時也防止程式人員將單詞key錯\r\n*/\r\nexport const ADD_TODO = 'add_todo'\r\nexport const DEL_TODO = 'del_todo'\r\nexport const UPDATE_TODO = 'update_todo'\r\nexport const UPDATE_DISPLAY = 'update_display'\r\nexport const UPDATE_TAB = 'update_tab'\r\nexport const CLEAR_FINISHED = 'clear_finished'","import React, { Component } from 'react'\r\nimport {createAddTodoAction} from '../../redux/actions/header'\r\nimport {connect} from 'react-redux'\r\nimport {nanoid} from 'nanoid'\r\n// import PropTypes from 'prop-types'\r\nimport './index.css'\r\n\r\nclass Header extends Component {\r\n\r\n\t// 對接收的props進行：類型、必要性的限制\r\n\t// static propTypes = {\r\n\t\t// addTodo:PropTypes.func.isRequired\r\n\t// }\r\n\r\n\tsubmitTodo = (e) => {\r\n\t\te.preventDefault()\r\n\t\t// 添加的todo內容不能為空\r\n\t\tif (this.txtNode.value.trim() === '') {\r\n\t\t\talert('請輸入正確內容')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst todoObj = {id: nanoid(), content: this.txtNode.value, finished: false, display: this.setDisplay()}\r\n\t\tthis.props.addTodo(todoObj)\r\n\t\t// 清空輸入框\r\n\t\tthis.txtNode.value = ''\r\n\t}\r\n\r\n\tsetDisplay = () => {\r\n\t\tif (this.props.tabState === 'finished') return false\r\n\t\telse return true\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form className=\"add-todo mx-auto d-flex align-items-center\">\r\n\t\t\t\t<input id=\"add-txt\" ref={c => this.txtNode = c} type=\"text\" name=\"item\" placeholder=\"新增待辦事項\"/>\r\n\t\t\t\t<input id=\"add-btn\" type=\"submit\" onClick={this.submitTodo} value=\"+\"/>\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tstate => ({tabState: state.tabFlag}), // 映射狀態\r\n\t  {addTodo: createAddTodoAction} // 映射操作狀態的方法\r\n)(Header)\r\n","import {ADD_TODO} from '../constant'\r\n\r\n// 創建「新增一個todo」的action動作對象\r\nexport const createAddTodoAction = todoObj => ({type: ADD_TODO, data: todoObj})","import React, { Component } from 'react'\r\nimport {createDelTodoAction, createUpdateTodoAction} from '../../redux/actions/todo'\r\nimport {connect} from 'react-redux'\r\nimport './index.css'\r\n\r\nclass Todo extends Component {\r\n\r\n  delHandler = (e) => {\r\n    e.preventDefault()\r\n    if (window.confirm('確定要刪除此 TODO 項目嗎?')) {\r\n      this.props.delTodo(this.props.id)\r\n    }\r\n  }\r\n\r\n  checkHandler = (e) => {\r\n    if (!e.target.matches('input')) return;\r\n    this.props.updateTodo(this.props.id)\r\n  }\r\n\r\n\trender() {\r\n    if (this.props.finished === true) {\r\n      return (\r\n        <label className=\"todo word-through\" onClick={this.checkHandler}>{this.props.content}\r\n          <input type=\"checkbox\" defaultChecked={this.props.finished}/>\r\n          <span className=\"checkmark\"></span>\r\n          <img className=\"delmark\" src=\"./img/cancel.jpg\" alt=\"delmark\" onClick={this.delHandler}/>\r\n        </label>\r\n    )} else {\r\n      return (\r\n        <label className=\"todo\" onClick={this.checkHandler}>{this.props.content}\r\n          <input type=\"checkbox\" defaultChecked={this.props.finished}/>\r\n          <span className=\"checkmark\"></span>\r\n          <img className=\"delmark\" src=\"./img/cancel.jpg\" alt=\"delmark\" onClick={this.delHandler}/>\r\n        </label>\r\n    )}\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tstate => ({yiduitodo: state.todos}), //映射狀態\r\n\t  {delTodo: createDelTodoAction, updateTodo: createUpdateTodoAction} //映射操作狀態的方法\r\n)(Todo)\r\n","import {DEL_TODO, UPDATE_TODO, UPDATE_DISPLAY, CLEAR_FINISHED} from '../constant'\r\n\r\n// 創建「刪除一個todo」的action動作對象\r\nexport const createDelTodoAction = id => ({type: DEL_TODO, data: id})\r\n// 創建「更新一個todo/todoList」的action動作對象\r\nexport const createUpdateTodoAction = id => ({type: UPDATE_TODO, data: id})\r\n// 創建「更新一個display」的action動作對象\r\nexport const createUpdateDisplayAction = todos => ({type: UPDATE_DISPLAY, data: todos})\r\n// 創建「刪除所有finished todos」的action動作對象\r\nexport const createDelFinishedAction = todos => ({type: CLEAR_FINISHED, data: todos})","import React, { Component } from 'react'\r\nimport {createUpdateTabAction} from '../../redux/actions/list'\r\nimport {createUpdateDisplayAction, createDelFinishedAction} from '../../redux/actions/todo'\r\nimport {connect} from 'react-redux'\r\nimport Header from '../Header'\r\nimport Todo from '../Todo'\r\nimport './index.css'\r\n\r\nclass List extends Component {\r\n\r\n  clickTabHandler = (e) => {\r\n    e.target.parentNode.childNodes.forEach(child => child.classList.remove('active'))\r\n    e.target.classList.add('active')\r\n\r\n    const newTab = e.target.dataset.tab\r\n    let newTodos = this.props.yiduitodo\r\n    newTodos.forEach(todo => {\r\n      if (newTab === 'unfinished') \r\n        (todo.finished === true) ? todo.display = false : todo.display = true\r\n      else if (newTab === 'finished')\r\n        (todo.finished === true) ? todo.display = true : todo.display = false\r\n      else todo.display = true\r\n    })\r\n    this.props.updateDisplay(newTodos)\r\n    this.props.updateTab(newTab)\r\n\r\n    // console.log(e.target.parentNode.parentNode.children[1].style.display);\r\n    // e.target.parentNode.parentNode.children[1].style.setProperty('display', 'none')\r\n\r\n    const items = e.target.parentNode.parentNode.children\r\n    const footer = e.target.parentNode.parentNode.lastChild\r\n    switch (newTab) {\r\n      case 'unfinished':\r\n        for (let i=1; i<items.length-1; i++) \r\n          (!items[i].classList.contains('word-through')) ? items[i].style.setProperty('display', 'block') : items[i].style.setProperty('display', 'none')\r\n        footer.children[0].style.setProperty('display', 'block')\r\n        footer.children[1].style.setProperty('display', 'none')\r\n        break\r\n      case 'finished':\r\n        for (let i=1; i<items.length-1; i++)\r\n          (items[i].classList.contains('word-through')) ? items[i].style.setProperty('display', 'block') : items[i].style.setProperty('display', 'none')\r\n        footer.children[0].style.setProperty('display', 'none')\r\n        footer.children[1].style.setProperty('display', 'block')\r\n        break\r\n      default:\r\n        for (let i=1; i<items.length-1; i++) items[i].style.setProperty('display', 'block')\r\n        footer.children[0].style.setProperty('display', 'block')\r\n        footer.children[1].style.setProperty('display', 'none')\r\n    }\r\n  }\r\n\r\n  count = () => {\r\n    let i = 0\r\n    const todos = this.props.yiduitodo\r\n    const ans = todos.reduce((total, todo) => {\r\n      (todo.finished) ? i = 0 : i = 1\r\n      return total + i\r\n    }, 0)\r\n    return ans\r\n  }\r\n\r\n  clickClearHandler = (e) => {\r\n    if (e.altKey) {\r\n      e.preventDefault()\r\n      if (window.confirm('確定要清除 所有資料 與 LocalStorage 嗎?')) {\r\n        this.props.delFinished([])\r\n        localStorage.clear('todos')\r\n      }\r\n    } else {\r\n    const newTodos = this.props.yiduitodo.filter(todo => (!todo.finished))\r\n    this.props.delFinished(newTodos)\r\n    }\r\n  }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t<div className=\"my-4 d-flex justify-content-center\"><span className=\"title\">TODO LIST</span></div>\r\n          <Header/>\r\n        <div className=\"todos mx-auto d-flex flex-column align-items-center\">\r\n          <div className=\"todo-tabs row\">\r\n            <div className=\"todo-tab col-4 active\" onClick={this.clickTabHandler} data-tab=\"all\">全部</div>\r\n            <div className=\"todo-tab col-4\" onClick={this.clickTabHandler} data-tab=\"unfinished\">待完成</div>\r\n            <div className=\"todo-tab col-4\" onClick={this.clickTabHandler} data-tab=\"finished\">已完成</div>\r\n          </div>\r\n          {\r\n            this.props.yiduitodo.map(todoObj => {\r\n              return <Todo key={todoObj.id} {...todoObj}/>\r\n            })\r\n          }\r\n          <div className=\"todo-footer d-flex align-items-center\">\r\n            <span className=\"count\">{this.count()} 個待完成項目</span>\r\n            <button type=\"button\" className=\"btn btn-outline-secondary btn-clear-finished\" onClick={this.clickClearHandler}>清除已完成項目</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"cnotes my-4 mx-auto\">\r\n          <div class=\"accordion\" id=\"accordionExample\">\r\n            <div class=\"accordion-item\">\r\n              <h2 class=\"accordion-header\" id=\"headingOne\">\r\n                <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"false\" aria-controls=\"collapseOne\">\r\n                  FAQ #1：使用方法\r\n                </button>\r\n              </h2>\r\n              <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                <div class=\"accordion-body\">\r\n                  您可以用此程式來管理您的待辦事項，在第一次使用時會有一些範例事項展示。<strong>本程式不會回傳任何資料到任何電腦或伺服器</strong>，預設使用您瀏覽器的 LocalStorage 空間進行待辦資料的存取。\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"accordion-item\">\r\n              <h2 class=\"accordion-header\" id=\"headingTwo\">\r\n                <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                  FAQ #2：如何完整移除所有待辦事項\r\n                </button>\r\n              </h2>\r\n              <div id=\"collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                <div class=\"accordion-body\">\r\n                  您可以經由「已完成」標籤中的【清除已完成項目】按鈕來清除您已完成的項目，而若您同時按住鍵盤上的 Alt 鍵並點選此按鈕時，可以<strong>完整清除您所有的待辦事項以及本程式儲存在 LocalStorage 的所有內容</strong>，之後您直接關閉視窗即可。\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tstate => ({yiduitodo: state.todos, tabState: state.tabFlag}), //映射狀態\r\n\t  {\r\n      updateDisplay: createUpdateDisplayAction, \r\n      updateTab: createUpdateTabAction,\r\n      delFinished: createDelFinishedAction,\r\n    } //映射操作狀態的方法\r\n)(List)\r\n","import {UPDATE_TAB} from '../constant'\r\n\r\n// 創建「更新一個tabFlag」的action動作對象\r\nexport const createUpdateTabAction = flag => ({type: UPDATE_TAB, data: flag})","/*\r\n\t本文件是應用的外殼組件，它的工作有：\r\n\t1. 引入react(但不用引入ReactDOM)以建立App類型組件並暴露它\r\n\t2. 引入所有的子組件並return(回傳)它們 如第18~23行所為\r\n\tNote: 不須包含任何react-redux的元素\r\n*/\r\n\r\nimport React, { Component } from 'react'\r\nimport List from './containers/List'\r\n// import './App.css'\r\n\r\nexport default class App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<List/>\r\n\t\t)\r\n\t}\r\n}\r\n","/*\r\n\t1. 本文件是用於創建一個專為Todo組件服務的reducer。reducer的本質就是一個函數!!!\r\n\t2. reducer函數會接到两個參數，分别為：之前的狀態(preState)、動作對象(action)\r\n\t*** reducer不要更改input的值 *** reducer必須為「純函數」\r\n*/\r\nimport {ADD_TODO, DEL_TODO, UPDATE_DISPLAY, UPDATE_TODO, CLEAR_FINISHED} from '../constant'\r\n\r\nconst initState = JSON.parse(localStorage.getItem('todos')) || [\r\n\t{id: '001', content: '把冰箱過期的拿去丟', finished: true, display: true},\r\n\t{id: '002', content: '整理一下電腦資料夾', finished: false, display: true},\r\n\t{id: '003', content: '繳電費、水費、瓦斯費', finished: true, display: true},\r\n\t{id: '004', content: '約Linda吃飯、看電影、閒聊天還有…', finished: false, display: true},\r\n\t{id: '005', content: '蝦皮進度追蹤與回應', finished: false, display: true},\r\n\t{id: '006', content: '02的筆試', finished: false, display: true},\r\n\t{id: '007', content: '約Tessa星期五吃雞', finished: false, display: true},\r\n] // 初始化Todo的列表\r\n\r\nexport default function todoReducer(preState = initState, action) {\r\n\t// console.log('todoReducer @#@#@#');\r\n\tconst {type, data} = action\r\n\tswitch (type) {\r\n\t\tcase ADD_TODO: // 若是增加一個todo\r\n\t\t\t// preState.unshift(data) // 此處不可以這樣寫，因為會導致preState被改寫，則todoReducer就不是純函數了!!!\r\n\t\t\t// 或簡單一點記：所有的reducer都不要去更動input的值，全都複製成另一個不同的東西…?!!!\r\n\t\t\tlocalStorage.setItem('todos', JSON.stringify([data, ...preState]))\r\n\t\t\treturn [data, ...preState]\r\n\t\tcase DEL_TODO: // 若是刪除一個todo\r\n\t\t\t// preState.shift(data) // 此處不可以這樣寫，因為會導致preState被改寫，則todoReducer就不是純函數了!!!\r\n\t\t\t// 或簡單一點記：所有的reducer都不要去更動input的值，全都複製成另一個不同的東西…?!!!\r\n\t\t\tconst newTodos_D = preState.filter((todo) => (todo.id !== data))\r\n\t\t\tlocalStorage.setItem('todos', JSON.stringify(newTodos_D))\r\n\t\t\treturn newTodos_D\r\n\t\tcase UPDATE_TODO:\r\n    \tconst newTodos_U = preState.map((todo) => {\r\n      \tif (todo.id === data) return {...todo, finished: !todo.finished} \r\n      \telse return todo\r\n      })\r\n\t\t\tlocalStorage.setItem('todos', JSON.stringify(newTodos_U))\r\n\t\t\treturn newTodos_U\r\n\t\tcase UPDATE_DISPLAY:\r\n\t\t\tlocalStorage.setItem('todos', JSON.stringify(data))\r\n\t\t\treturn data\r\n\t\tcase CLEAR_FINISHED:\r\n\t\t\tlocalStorage.setItem('todos', JSON.stringify(data))\r\n\t\t\treturn data\r\n\t\tdefault:\r\n\t\t\tlocalStorage.setItem('todos', JSON.stringify(preState))\r\n\t\t\treturn preState\r\n\t}\r\n}\r\n","/* \r\n\t本文件專門用於暴露一個store對象，且整個應用只有一個store對象\r\n\t本文件毫無react-redux的干係，只跟原生的redux有關而已\r\n*/\r\n\r\n// 1. 引入createStore，專門用於創建redux中最為核心的store對象\r\n// import {createStore,applyMiddleware,combineReducers} from 'redux'\r\nimport {createStore, combineReducers} from 'redux'\r\n\r\n// 2. 引入為各組件服務的reducer\r\n// 引入為List組件服務的reducer\r\nimport listReducer from './reducers/list'\r\n// 引入為Todo組件服務的reducer\r\nimport todoReducer from './reducers/todo'\r\n// 引入redux-devtools-extension\r\n// import {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\n// 3. 匯總所有的reducer變為一個總的reducer\r\nconst allReducer = combineReducers({\r\n\ttodos: todoReducer, // todoReducer回傳的結果，store存在key為\"todos\"的物件當中\r\n\ttabFlag: listReducer, // tabReducer回傳的結果，store存在key為\"tabFlag\"的物件當中\r\n})\r\n\r\n// 4. 暴露store \r\n// export default createStore(allReducer,composeWithDevTools(applyMiddleware(thunk)))\r\nexport default createStore(allReducer)","/*\r\n\t1. 本文件是用於創建一個專為List組件服務的reducer。reducer的本質就是一個函數!!!\r\n\t2. reducer函數會接到两個參數，分别為：之前的狀態(preState)、動作對象(action)\r\n\t*** reducer不要更改input的值 *** reducer必須為「純函數」\r\n*/\r\nimport {UPDATE_TAB} from '../constant'\r\n\r\nconst initState = 'all' // 初始化tabFlag的值\r\n\r\nexport default function listReducer(preState = initState, action) {\r\n\t// console.log('listReducer @#@#@#');\r\n\tconst {type, data} = action\r\n\tswitch (type) {\r\n\t\tcase UPDATE_TAB: // 若是更新tab狀態 \r\n\t\t\t// tabReducer必須是純函數\r\n\t\t\t// 或簡單一點記：所有的reducer都不要去更動input的值，全都複製成另一個不同的東西…?!!!\r\n\t\t\treturn data\r\n\t\tdefault:\r\n\t\t\treturn preState\r\n\t}\r\n}\r\n","/*\r\n\t本文件為入口文件，主要用於\r\n\t1. 調用render方法，將<App/>放到root中並渲染至頁面 如第19行所為\r\n\t2. 引入store與Provider，好讓react-redux自動提供store給所有需要的容器組件\r\n*/\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\n// 為了把store帶給container，又須符合react-redux的要求(不能在container中自行引入store)\r\n// 不對，這裡不是App.jsx !!!!???? \r\n// 其實原本是放在 App.jsx裡，但若有很多個組件，則App.jsx裡就要寫很多行的 store={store}，\r\n// 而在使用react-redux之後，我們引入Provider，並把傳入store的工作，交到App.jsx的上層，\r\n// 即index.js這個入口文件，所以要import下列二行\r\nimport store from './redux/store'\r\n// 跟render有關?????  錯，是跟store有關!!!!!\r\n// 我們只需把store給Provider即可(如第22行)，它會傳給所有需要的容器組件\r\nimport {Provider} from 'react-redux'\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App/>\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n)\r\n\r\n// 在使用react-redux後，因為connect的關係\r\n// react-redux自己會監測並調用render了!!!\r\n//\r\n// store.subscribe(()=>{\r\n// \tReactDOM.render(<App/>,document.getElementById('root'))\r\n// })"],"sourceRoot":""}